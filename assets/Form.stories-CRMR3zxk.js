import{__toESM as e}from"./chunk-D3B-zxXs.js";import{require_react as t}from"./react-NX0r4bef.js";import{Box as n,ChakraProvider as r,action as i,jsx as a,jsxs as o}from"./jsx-runtime--pC3LNoF.js";import{ActionForm as s}from"./ActionForm-ULnUYkG-.js";import{NOOP as c,PhoneCall as l,defaultPhoneCall as u}from"./PhoneCall-B_MzzjyG.js";var d,f,p,m;function h(e){return new Promise(t=>{setTimeout(t,e)})}var g=e(t());const _=[`email`,`name`,`phone`];function v({action:e=u,guideline:t,linkColor:r=`#1D3D90`,mainColor:i=`#A42828`,postActionHtml:d=``,targets:f,widgetId:p,onFail:m=c,onFinish:h=c,onSuccess:v=c,...y}){let[b,x]=(0,g.useState)(null),[S,C]=(0,g.useState)(!1),w=(0,g.useRef)(null),T=(0,g.useCallback)(e=>{var t;C(!1),h(e),(t=w.current)?.reset()},[w,h,C]),E=(0,g.useCallback)(e=>{x(e),C(!0)},[x,C]);return o(n,{className:`bonde-phone-pressure-form`,...y,children:[a(s,{brandColor:i,fields:_,ref:w,submitLabel:`Ligar`,widgetId:p,onSubmit:E}),b&&S&&a(l,{action:e,activist:b,guideline:t,linkColor:r,mainColor:i,postActionHtml:d,targets:f,widgetId:p,onFail:m,onFinish:T,onSuccess:v})]})}try{v.displayName=`PhonePressureForm`,v.__docgenInfo={description:``,displayName:`PhonePressureForm`,props:{action:{defaultValue:{value:`configureBondePhoneCall('http://localhost:8000')`},description:``,name:`action`,required:!1,type:{name:`PhoneCallAction`}},guideline:{defaultValue:null,description:``,name:`guideline`,required:!0,type:{name:`string`}},linkColor:{defaultValue:{value:`#1D3D90`},description:``,name:`linkColor`,required:!1,type:{name:`string`}},mainColor:{defaultValue:{value:`#A42828`},description:``,name:`mainColor`,required:!1,type:{name:`string`}},postActionHtml:{defaultValue:{value:``},description:``,name:`postActionHtml`,required:!1,type:{name:`string`}},targets:{defaultValue:null,description:``,name:`targets`,required:!0,type:{name:`PhoneTarget[]`}},widgetId:{defaultValue:null,description:``,name:`widgetId`,required:!0,type:{name:`number`}},onFail:{defaultValue:null,description:``,name:`onFail`,required:!1,type:{name:`((state: PhoneCallState) => void)`}},onFinish:{defaultValue:null,description:``,name:`onFinish`,required:!1,type:{name:`((state: PhoneCallState) => void)`}},onSuccess:{defaultValue:null,description:``,name:`onSuccess`,required:!1,type:{name:`(() => void)`}}}}}catch{}const y=function(e){return a(r,{children:a(e,{})})},b={title:`Phone Pressure`,component:v,decorators:y,args:{guideline:`Olá, meu nome é [seu nome]. Estou ligando para pedir que [nome do alvo] faça [ação solicitada]. Essa decisão é muito importante porque [insira argumento principal]. Contamos com o apoio de vocês!`,postActionHtml:`<p>A pós-ação vai aqui!</p>`,targets:[{name:`Dep. Fulano`,phone:`+55 22 00000-0000`},{name:`Sen. Sicrana`,phone:`+55 33 00000-0000`}],widgetId:0,onFail:i(`onFail`),onFinish:i(`onFinish`),onSuccess:i(`onSuccess`)},argTypes:{action:{description:`Callback de ligação telefônica (por padrão, usa API do Bonde)`,type:`function`},guideline:{description:`Roteiro da ligação`,type:`string`},linkColor:{description:`Cor dos links do modal`,type:`string`},mainColor:{description:`Cor primária da campanha`,type:`string`},postActionHtml:{description:`HTML de compartilhamento da campanha`},targets:{description:`Lista de alvos`},widgetId:{description:`ID do widget do Bonde`},onFail:{description:`Evento disparado quando a ligação falhou (número de tentativas excedido, usuário desistiu, etc.)`,type:`function`},onSuccess:{description:`Evento disparado quando a ligação foi finalizada com sucesso`,type:`function`}},parameters:{controls:{exclude:[`action`,`maxWidth`,`onFail`,`onSuccess`]}}};var x=b;const S=async(e,t)=>{await h(1e3),t(`ringing`),await h(3e3),t(`in-progress`),await h(3e3),t(`completed`)},C=async(e,t)=>{await h(1e3),t(`ringing`),await h(3e3),t(`failed`)},w={args:{action:S,maxWidth:`40rem`}},T={args:{action:C,maxWidth:`40rem`}};w.parameters={...w.parameters,docs:{...(d=w.parameters)?.docs,source:{originalSource:`{
  args: {
    action: successPhoneCall,
    maxWidth: '40rem'
  }
}`,...(f=w.parameters)==null||(f=f.docs)==null?void 0:f.source}}},T.parameters={...T.parameters,docs:{...(p=T.parameters)?.docs,source:{originalSource:`{
  args: {
    action: failurePhoneCall,
    maxWidth: '40rem'
  }
}`,...(m=T.parameters)==null||(m=m.docs)==null?void 0:m.source}}};const E=[`Success`,`Failure`];export{T as Failure,x as Form_stories_default,w as Success,E as __namedExportsOrder};